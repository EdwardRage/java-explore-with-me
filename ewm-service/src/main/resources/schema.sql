drop table if exists compilation_event CASCADE;
drop table if exists events CASCADE;
drop table if exists compilations CASCADE;
drop table if exists requests CASCADE;
drop table if exists users CASCADE;
drop table if exists categories CASCADE;
drop table if exists comments CASCADE;

create table if not exists users
(
    user_id bigint generated by default as identity
        constraint users_pk
            primary key,
    email   varchar not null unique,
    name    varchar not null
);

create table if not exists categories
(
    categories_id bigint generated by default as identity
        constraint categories_pk
            primary key,
    name          varchar not null unique
);

create table if not exists events
(
    event_id           bigint generated by default as identity
        constraint events_pk
            primary key,
    annotation         varchar   not null,
    category_id        bigint    not null
        constraint events_category_fk
            references categories,
    description        varchar   not null,
    event_time         timestamp not null,
    paid               boolean,
    participant_limit  integer   not null,
    request_moderation boolean   not null,
    title              varchar   not null,
    initiator_id       bigint    not null
        constraint events_user_fk
            references users,
    published_on       timestamp,
    state              varchar   not null,
    confirmed_request  integer,
    created_on         timestamp not null,
    lon                decimal   not null,
    lat                decimal   not null
);

create index events_initiator_index
    on events (initiator_id);

create index events_category_index
    on events (category_id);

create index events_start_index
    on events (event_time);

create index events_state_index
    on events (state);

create table if not exists requests
(
    request_id   bigint generated by default as identity
        constraint requests_pk
            primary key,
    created      timestamp not null,
    event_id     bigint    not null
        constraint requests_event_fk
            references events,
    requester_id bigint    not null
        constraint requests_user_fk
            references users,
    status       varchar   not null
);

create index requests_event_index
    on requests (event_id);

create index requests_user_index
    on requests (requester_id);

create table if not exists compilations
(
    compilation_id bigint generated by default as identity
        constraint compilations_pk
            primary key,
    pinned         boolean not null,
    title          varchar not null
);

create index compilations_pinned_index
    on compilations (pinned);

create table if not exists compilation_event
(
    compilation_id bigint not null
    constraint compilation_event_compilations_compilation_id_fk
    references compilations,
    event_id       bigint not null
    constraint compilation_event_events_event_id_fk
    references events,
    constraint compilation_event_pk
    primary key (compilation_id, event_id)
);

create table if not exists comments
(
    comment_id bigint generated by default as identity
        constraint comments_pk
            primary key,
    user_id    bigint  not null
        constraint comments_users_fk
            references users,
    event_id   bigint  not null
        constraint comments_events_fk
            references events,
    text       varchar not null
);

create index comments_user_index
    on comments (user_id);

create index comments_event_index
    on comments (event_id);
